TODO list for future development of SuperScript model.

Priority:
- write script to produce requirements and script to install (with pip + conda)
- add niter selection to GUI.
- write a better copy method for saving/loading project, rather than pickling whole project and then re-setting the mutable data memebers
- Add parallel niter=0 guesses: poor performance!
- make log project and worker variables optional (set in config)
- remove print statements from org.py (lines 163-5) and check get_units_contributed:is it one teimstep out?
- refactor TeamAllocator constructor (implement a strategy factory)
- refactor strategy classes to use ABC pattern rather than Interface. This will remove code duplication (e.g. in the constructors).
- update server.py to take all default gui values from config.py
- move use of np.random.choice to Random class (e.g. in optimisation.py) - this was added later because it allows weighted selection without replacement
- remove code duplication in optimisation.py - smart_guess and MyTakeStep.__call__

Contribute to Mesa:
- Correct docstring 'for _new_agent_reporter':  Args:
            name: Name of the agent-level variable to collect.
            reporter: Attribute string, or function object that returns the
                      variable when given a model instance.

Longer-term:
- test parallel batchrunner alongside (on top of) parallel basinhopping: processes within prcoesses?
    Note that there are issues with copying objects back and forwards between subprocesses. e.g. workers are copied not same instance when doing parallel team allocation.
    See line: best_team = opti.get_team(team_x[argmax(probs)])

